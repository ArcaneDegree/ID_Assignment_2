// Note: The datetime format for all datetime attributes is 'DD/MM/YYYY hh:mm:ss' (without
the single quotation marks).
// Note: The date format for all date attributes is 'DD/MM/YYYY' (without the single
quotation marks).

// High priority
Member
-> MemberID => int (Primary Key)
-> Name => varchar(200)
-> Passwd => varchar(100)
-> EmailAddress => varchar(200)
-> PrivilegeType => int
-> CurrentStatus => int
-> MemberImgFilePath => varchar(300)

/*
Notes:
The DateTimeJoined datetime attribute has been removed.

Passwords will be encrypted on the server side. Symmetric encryption will be used. 
The cryptography method that would be used for the encryption is to be decided.

The PrivilegeType attribute can only have a value of 0, 1 or 2.
Mapping of PrivilegeType attribute values:
Guest = 0
NormalMember = 1
Doctor = 2
Administrator = 3

The value of the CurrentStatus attribute must be a value found in the CurrentStatus 
attribute mapping table.
Mapping of CurrentStatus attribute values:
Offline = 0
Online = 1
*/

// High priority
HealthArticlePost
-> HealthArticlePostID => int (Primary Key)
-> PreviewTitle => varchar(1000)
-> HealthArticleURLLink => varchar(8000)
-> HealthArticlePostCreationDate => varchar(100)
-> HealthArticlePostImgFilePath => varchar(300)

// Medium priority
HealthArticlePostReaction
-> HealthArticlePostReactionID => int (Primary Key)
-> MemberID => int (Foreign Key REFERENCES Member.MemberID)
-> ReactionType => int

/*
Notes:
The ReactionType attribute can only have a value of 0 or 1. 0 represents a like while 1 
represents a dislike.
*/

// Medium priority
HealthArticleComment
-> HealthArticleCommentID => int (Primary Key)
-> MemberID => int (Foreign Key REFERENCES Member.MemberID)
-> Content => varchar(8000)

/*
Notes:
The CreationDateTime datetime attribute has been removed.
*/

// High priority
Doctor
-> DoctorID => int (Primary Key)
-> Name => varchar(200)
-> EmailAddress => varchar(200)
-> Specialization => varchar(200)
-> Description => varchar(1000)
-> DoctorImgFilePath => varchar(300)

// High priority
DoctorReview
-> DoctorReviewID => int (Primary Key)
-> ReviewingMemberID => int (Foreign Key REFERENCES Member.MemberID)
-> ReviewedDoctorID => int (Foreign Key REFERENCES Doctor.DoctorID)
-> ReviewStarCount => int
-> Content => varchar(8000)

/*
Notes:
The CreationDateTime datetime attribute has been removed.

The value of the ReviewStarCount attribute must only be a value ranging from 0 to 5.
*/

// High priority
AppointmentBooking
-> AppointmentBookingID => int (Primary Key)
-> BookingMemberID => int (Foreign Key REFERENCES Member.MemberID)
-> BookedDoctorID => int (Foreign Key REFERENCES Doctor.DoctorID)
-> AppointmentBookingCreationDateTime => varchar(100)
-> AppointmentDateTime => varchar(100)

// High priority
FastDocTransaction
-> TransactionID => int (Primary Key)
-> OriginMemberID => int (Foreign Key REFERENCES Member.MemberID)
-> AssociatedAppointmentBookingID => int (Foreign Key REFERENCES AppointmentBooking.AppointmentBookingID)
-> TransactionAmount => money
-> TransactionMethod => int
-> FullName => varchar(200)
-> EmailAddress => varchar(200)
-> Address => varchar(200)
-> City => varchar(200)
-> State => varchar(200)
-> PostalCode => varchar(200)
-> CardholderName => varchar(200)
-> CreditCardNumber => varchar(200)
-> ExpiryMonth => int
-> ExpiryYear => int
-> CVV => int

/*
Notes:
The name of this entity was changed from "Transaction" to "FastDocTransaction" due to "Transaction"
being a reserved keyword in SQLite, which caused issues when creating this table in the SQLite database.
The table storing transaction data in the RestDB database is still named "Transaction" however.

The OriginMemberID attribute stores the ID of the member who performed the transaction.

The value of the TransactionMethod attribute must be a value found in the TransactionMethod 
attribute mapping table.
Mapping of TransactionMethod attribute values:
CreditCard = 0
*/

// High priority
Consultation
-> ConsultationID => int (Primary Key)
-> ConsultingMemberID => int (Foreign Key REFERENCES Member.MemberID)
-> ConsultantDoctorID => int (Foreign Key REFERENCES Doctor.DoctorID)
-> AssociatedAppointmentBookingID => int (Foreign Key REFERENCES AppointmentBooking.AppointmentBookingID)

